#include<stdio.h>

void kruskal(int cost[5][5],int n)
{
	int par[n];
	int a=0,b=0,u=0,v=0,min,i,j,min_cost=0,ne=1;
	for(i=0;i<n;i++)
		par[i]=-1;
	printf("\nThe minimum spani=ning tree edges are \n");
	while(ne<=n-1)
	{
		min=999;
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
				if(cost[i][j]<min)
				{
					min=cost[i][j];
					a=u=i;
					b=v=j;
				}
		while(par[u]!=-1)
			u=par[u];
			
		while(par[v]!=-1)
			v=par[v];
			
		if(u!=v)
		{
			printf("From Vertex %d to vertex %d the cost is %d\n",a,b,min);
			
			min_cost+=min;
			
			
			
			if(par[b]==-1)
				par[b]=a;
			else
				par[a]=b;
			ne+=1; 
		}

		cost[a][b]=cost[b][a]=999;
	}
	
	printf("Cost of MST = %d\n",min_cost);
			
	
}

void main()
{
	int n,c[5][5],i,j;
	printf("Enter no of vertices");
	scanf("%d",&n);
	printf("Enter adjacency Matrix\n");
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			scanf("%d",&c[i][j]);
		}
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(c[i][j]==0)
				c[i][j]=999;
		}
	}
	kruskal(c,5);
}
