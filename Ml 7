import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelBinarizer
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.metrics import confusion_matrix
iris = load_iris()
X = iris.data
y = iris.target
encoder = LabelBinarizer()
y = encoder.fit_transform(y)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = Sequential()
model.add(Dense(10, input_dim=4, activation='relu')) 
model.add(Dense(8, activation='relu'))              
model.add(Dense(3, activation='softmax'))           
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X_train, y_train, epochs=100, batch_size=8, verbose=1)
y_pred = model.predict(X_test)
y_pred_labels = np.argmax(y_pred, axis=1)  
y_test_labels = np.argmax(y_test, axis=1)  
confusion_mat = confusion_matrix(y_test_labels, y_pred_labels)
print("Confusion Matrix:")
print(confusion_mat)
