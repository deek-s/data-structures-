# Import required libraries

import pandas as pd

import numpy as np 

import matplotlib.pyplot as plt

import sklearn

from sklearn.neural_network import MLPClassifier

from sklearn.neural_network import MLPRegressor

# Import necessary modules

from sklearn.model_selection import train_test_split

from sklearn.metrics import mean_squared_error

from math import sqrt

from sklearn.metrics import r2_score

df = pd.read_csv('diabetes.csv') 

print(df.shape)

df.describe().transpose()

target_column = ['Outcome'] 

predictors = list(set(list(df.columns))-set(target_column))

df[predictors] = df[predictors]/df[predictors].max()

df.describe().transpose()

X = df[predictors].values

y = df[target_column].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=40)

print(X_train.shape); print(X_test.shape)

from sklearn.neural_network import MLPClassifier

mlp = MLPClassifier(hidden_layer_sizes=(8,8,8), activation='relu', solver='adam', 

max_iter=500)

mlp.fit(X_train,y_train)

predict_train = mlp.predict(X_train)

predict_test = mlp.predict(X_test)

from sklearn.metrics import classification_report,confusion_matrix

print(confusion_matrix(y_train,predict_train))

print(classification_report(y_train,predict_train))

print(‘Confusion matrix’,confusion_matrix(y_test,predict_test))

print(classification_report(y_test,predict_test))

Output

(768, 9)

(537, 8)

(231, 8)

/usr/local/lib/python3.10/dist-

packages/sklearn/neural_network/_multilayer_perceptron.py:1098: DataConversionWarning: A 

column-vector y was passed when a 1d array was expected. Please change the shape of y to 

(n_samples, ), for example using ravel().

 y = column_or_1d(y, warn=True)

[[318 40]

[ 70 109]]

 precision recall f1-score support

 0 0.82 0.89 0.85 358

 1 0.73 0.61 0.66 179

 accuracy 0.80 537

 macro avg 0.78 0.75 0.76 537

weighted avg 0.79 0.80 0.79 537

Confusion matrix [[123 19]

[ 39 50]]

 precision recall f1-score support

 0 0.76 0.87 0.81 142

 1 0.72 0.56 0.63 89

 accuracy 0.75 231

 macro avg 0.74 0.71 0.72 231

weighted avg 0.75 0.75 0.74 231
